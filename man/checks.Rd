% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check.R
\name{checks}
\alias{checks}
\alias{check_df}
\alias{check_sclvals}
\alias{compare_sclvals}
\alias{check_mrit}
\alias{check_ovlp}
\alias{check_msdf}
\alias{check_neg}
\alias{check_comp}
\title{A set of checks for the appropriateness of inputs}
\usage{
check_df(x)

check_sclvals(x)

compare_sclvals(x, x_attr)

check_mrit(x)

check_ovlp(x)

check_msdf(x)

check_neg(x)

check_comp(x, mrit_min, use)
}
\arguments{
\item{x}{some arbitrary input to be checked}

\item{x_attr}{a numeric vector of length 2 indicating the start- and endpoint
of a scale.}

\item{mrit_min}{a numeric constant of length 1 to specify the marginal
corrected item-total correlation.}

\item{use}{an optional string to specify how missing values enter the
analysis. See \code{use} in \code{\link[stats]{cor}} for details.}
}
\description{
A set of checks for the appropriateness of inputs
}
\details{
\code{check_df()} guarantees that \code{x} is a data frame. In
  addition, it verifies that \code{x} has less than two variables (a single
  item can't build a core), \code{x} has column names (used to pre-build
  \code{scls} in the overlapping process), if the column names are unique and
  not of type \code{NA}.

  \code{check_sclvals()} checks whether \code{x} is a two element vector
  (Note: implicitly assures that it is not \code{NULL}, since \code{NULL} is
  a logical constant of length `0`.). Integers are coerced to be of type
  \code{double}. Additionally the function makes sure that the first value is
  not greater than the second.

  \code{compare_sclvals()} ensures that the \code{sclvals} set with
  \code{overlap()} are equal to those set with \code{disjoint()}.

  \code{check_rit()} guarantees that the input is a double vector of length
  one. Moreover, it secures that the lower bound is unique and ranges between
  `0` and `1`.

  \code{check_ovlp()} safeguards that\code{x}, is a character vector of
  length `1`. Within \code{disjoint()} and \code{overlap()}) \code{switch()}
  validates the input string itself, throwing an error message when the given
  character doesn't match any available option.

  \code{check_msdf()} guards against inputs that are not of type `msdf`.

  \code{check_neg()} verifies that the (\code{negative_too} input is a
  logical constant of length 1 and not a missing value (this is necessary
  because objects of type \code{NA} are logical constants of length 1, too).

  \code{check_comp()} examines the correlation matrix, \code{cor(df)}. It
  complains if no correlation is greater than the specified \code{mrit_min}.
}
